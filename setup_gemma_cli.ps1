# GEMMA 3 COMMAND LINE INTERFACE SETUP
# Direct PowerShell integration - No web interface bullshit

Write-Host "üöÄ Setting up Gemma 3 Command Line Interface..." -ForegroundColor Green

# Navigate to JuggernautAI directory
if (Test-Path "D:\JuggernautAI") {
    Set-Location "D:\JuggernautAI"
    Write-Host "‚úÖ In D:\JuggernautAI directory" -ForegroundColor Green
} else {
    Write-Host "‚ùå D:\JuggernautAI directory not found" -ForegroundColor Red
    exit 1
}

# Install required Python packages
Write-Host "üì¶ Installing required packages..." -ForegroundColor Yellow
pip install requests psutil

# Check if Ollama is running
Write-Host "üîç Checking Ollama status..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:11434/api/tags" -Method Get
    Write-Host "‚úÖ Ollama is running" -ForegroundColor Green
    
    # List available models
    Write-Host "üìã Available models:" -ForegroundColor Cyan
    foreach ($model in $response.models) {
        Write-Host "  - $($model.name)" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Ollama not running. Please start Ollama first." -ForegroundColor Red
    Write-Host "üí° Run: ollama serve" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üéâ Setup complete!" -ForegroundColor Green
Write-Host ""
Write-Host "USAGE EXAMPLES:" -ForegroundColor Cyan
Write-Host "  python gemma_cli.py                    # Interactive mode" -ForegroundColor White
Write-Host "  python gemma_cli.py -m 'Fix my files'  # Single message" -ForegroundColor White
Write-Host "  python gemma_cli.py -c 'dir D:\'       # Execute command" -ForegroundColor White
Write-Host "  python gemma_cli.py --sysinfo          # System info" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ Starting Gemma CLI in interactive mode..." -ForegroundColor Green
Write-Host ""

# Start the CLI
python gemma_cli.py

